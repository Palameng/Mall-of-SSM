<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.my.o2o.dao.ShopDao">

	<!-- column 数据库里的字段 property pojo里的成员名 -->
	<resultMap type="com.my.o2o.entity.Shop" id="shopMap">
		<id column="shop_id" property="shopId" />
		<result column="shop_name" property="shopName" />
		<result column="shop_desc" property="shopDesc" />
		<result column="shop_addr" property="shopAddr" />
		<result column="phone" property="phone" />
		<result column="shop_img" property="shopImg" />
		<result column="priority" property="priority" />
		<result column="create_time" property="createTime" />
		<result column="last_edit_time" property="lastEditTime" />
		<result column="enable_status" property="enableStatus" />
		<result column="advice" property="advice" />

		<!-- 处理复合对象 1 association 先指定需要处理的POJO中的哪个属性 column指定数据库中需要关联的表的该属性对应的数据名 
			javaType最后指定该POJO类型 2 id 指定 -->
		<association column="area_id" property="area"
			javaType="com.my.o2o.entity.Area">
			<id column="area_id" property="areaId" />
			<result column="area_name" property="areaName" />
		</association>
		<association property="shopCategory" column="shop_category_id"
			javaType="com.my.o2o.entity.ShopCategory">
			<id column="shop_category_id" property="shopCategoryId" />
			<result column="shop_category_name" property="shopCategoryName" />
		</association>
		<association property="owner" column="user_id"
			javaType="com.my.o2o.entity.PersonInfo">
			<id column="user_id" property="userId" />
			<result column="name" property="name" />
		</association>
	</resultMap>

	<!-- 如果字段名相同，使用AS关键字处理字段名 例如s.priority AS areaPriority -->
	<select id="queryByShopId" resultMap="shopMap" parameterType="Long">
		SELECT
		s.shop_id,
		s.shop_name,
		s.shop_desc,
		s.shop_addr,
		s.phone,
		s.shop_img,
		s.priority,
		s.create_time,
		s.last_edit_time,
		s.enable_status,
		s.advice,
		a.area_id,
		a.area_name,
		sc.shop_category_id,
		sc.shop_category_name
		FROM
		tb_shop s,
		tb_area a,
		tb_shop_category sc
		WHERE
		s.area_id = a.area_id
		AND
		s.shop_category_id = sc.shop_category_id
		AND
		s.shop_id = #{shopId}
	</select>

	<!-- 使用jdbc的getGeneratedKeys获取数据库自增主键值 -->
	<insert id="insertShop" useGeneratedKeys="true" keyColumn="shop_id"
		keyProperty="shopId">
		INSERT INTO
		tb_shop(
		owner_id,
		area_id,
		shop_category_id,
		shop_name,
		shop_desc,
		shop_addr,
		phone,
		shop_img,
		priority,
		create_time,
		last_edit_time,
		enable_status,
		advice
		)
		VALUES
		(
		#{owner.userId},
		#{area.areaId},
		#{shopCategory.shopCategoryId},
		#{shopName},
		#{shopDesc},
		#{shopAddr},
		#{phone},
		#{shopImg},
		#{priority},
		#{createTime},
		#{lastEditTime},
		#{enableStatus},
		#{advice}
		)
	</insert>

	<update id="updateShop" parameterType="com.my.o2o.entity.Shop">
		update tb_shop
		<set>
			<if test="shopName != null">shop_name=#{shopName},</if>
			<if test="shopDesc != null">shop_desc=#{shopDesc},</if>
			<if test="shopAddr != null">shop_addr=#{shopAddr},</if>
			<if test="phone != null">phone=#{phone},</if>
			<if test="shopImg != null">shop_img=#{shopImg},</if>
			<if test="priority != null">priority=#{priority},</if>
			<if test="lastEditTime != null">last_edit_time=#{lastEditTime},</if>
			<if test="enableStatus != null">enable_status=#{enableStatus},</if>
			<if test="advice != null">advice=#{advice},</if>
			<if test="area != null">area_id=#{area.areaId},</if>
			<if test="shopCategory != null">shop_category_id=#{shopCategory.shopCategoryId}</if>
		</set>
		where shop_id=#{shopId}
	</update>

	<!-- 分页查询，根据名字，状态，所有者，类别、区域组合查询 -->
	<select id="queryShopList" resultMap="shopMap">
		SELECT
		s.shop_id,
		s.shop_name,
		s.shop_desc,
		s.shop_addr,
		s.phone,
		s.shop_img,
		s.priority,
		s.create_time,
		s.last_edit_time,
		s.enable_status,
		s.advice,
		a.area_id,
		a.area_name,
		sc.shop_category_id,
		sc.shop_category_name
		FROM
		tb_shop s,
		tb_area a,
		tb_shop_category sc
		<where>
			<if
				test="shopCondition.shopCategory != null and shopCondition.shopCategory.shopCategoryId != null">
				and s.shop_category_id =
				#{shopCondition.shopCategory.shopCategoryId}
			</if>

            <!-- 根据上一级类别查询出所有属于此上级类别下的所有商品 -->
            <!-- 第一步，先根据传入父ID搜索出所有继承自他的所有子类别，第二步，判断主查询里的ID(s.shop_category_id)是否在这个子查询批次中 -->
			<if
				test="shopCondition.shopCategory != null and shopCondition.shopCategory.parent != null and shopCondition.shopCategory.parent.shopCategoryId != null">
                and s.shop_category_id in (select shop_category_id from tb_shop_category WHERE parent_id = #{shopCondition.shopCategory.parent.shopCategoryId})
			</if>

			<if
				test="shopCondition.area != null and shopCondition.area.areaId != null">
				and s.area_id = #{shopCondition.area.areaId}
			</if>

			<if test="shopCondition.shopName != null">
				and s.shop_name like '%${shopCondition.shopName}%'
			</if>

			<if test="shopCondition.enableStatus != null">
				and s.enable_status = #{shopCondition.enableStatus}
			</if>

			<if
				test="shopCondition.owner != null and shopCondition.owner.userId != null">
				and s.owner_id = #{shopCondition.owner.userId}
			</if>

			AND
			s.area_id=a.area_id
			AND
			s.shop_category_id = sc.shop_category_id
		</where>
		ORDER BY
		s.priority DESC
		LIMIT #{rowIndex},#{pageSize};
	</select>


	<select id="queryShopCount" resultType="int">
		SELECT count(1) FROM tb_shop s, tb_area a, tb_shop_category sc
		<where>
			<if
				test="shopCondition.shopCategory != null and shopCondition.shopCategory.shopCategoryId != null">
				and s.shop_category_id =
				#{shopCondition.shopCategory.shopCategoryId}
			</if>

            <if
                test="shopCondition.shopCategory != null and shopCondition.shopCategory.parent != null and shopCondition.shopCategory.parent.shopCategoryId != null">
                and s.shop_category_id in (select shop_category_id from tb_shop_category WHERE parent_id = #{shopCondition.shopCategory.parent.shopCategoryId})
            </if>

			<if
				test="shopCondition.area != null and shopCondition.area.areaId != null">
				and s.area_id = #{shopCondition.area.areaId}
			</if>

			<if test="shopCondition.shopName != null">
				and s.shop_name like '%${shopCondition.shopName}%'
			</if>

			<if test="shopCondition.enableStatus != null">
				and s.enable_status = #{shopCondition.enableStatus}
			</if>

			<if
				test="shopCondition.owner != null and shopCondition.owner.userId != null">
				and s.owner_id = #{shopCondition.owner.userId}
			</if>
			AND
			s.area_id=a.area_id
			AND
			s.shop_category_id = sc.shop_category_id
		</where>
	</select>
</mapper>